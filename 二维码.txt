2016年12月2日17:24:39

利用php类库PHP QR Code来实现,不需要装额外的php扩展,首先下载类库包,http://phpqrcode.sourceforge.net/


1，浏览器输出：
 
include "phpqrcode/phpqrcode.php"; 
$value="http://www.baoge.net"; 
$errorCorrectionLevel = "L";    //扫描容错
$matrixPointSize = "4"; 
QRcode::png($value, false, $errorCorrectionLevel, $matrixPointSize); 
exit; 
?>

2，文件输出二维码

include('phpqrcode/phpqrcode.php'); 
// 二维码数据 
$data = 'http://www.baoge.net'; 
// 生成的文件名 
$filename = '1111.png'; 
// 纠错级别：L、M、Q、H 
$errorCorrectionLevel = 'L'; 
// 点的大小：1到10 
$matrixPointSize = 4; 
QRcode::png($data, $filename, $errorCorrectionLevel, $matrixPointSize, 2);

3，生成中间带logo的二维码

<?php 
include('phpqrcode/phpqrcode.php'); 
$value='http://www.baoge.net'; 
$errorCorrectionLevel = 'L'; 
$matrixPointSize = 6; 
QRcode::png($value, 'xiangyang.png', $errorCorrectionLevel, $matrixPointSize, 2); 
echo "QR code generated"."<br />"; 
$logo = 'logo.png'; 
$QR = 'xiangyang.png';
if($logo !== FALSE) 
{
$QR = imagecreatefromstring(file_get_contents($QR)); 
$logo = imagecreatefromstring(file_get_contents($logo)); 
$QR_width = imagesx($QR); 
$QR_height = imagesy($QR); 
$logo_width = imagesx($logo); 
$logo_height = imagesy($logo); 


$logo_qr_width = $QR_width / 5; 
$scale = $logo_width / $logo_qr_width; 
$logo_qr_height = $logo_height / $scale; 
$from_width = ($QR_width - $logo_qr_width) / 2; 

imagecopyresampled() 将一幅图像中的一块正方形区域拷贝到另一个图像中，平滑地插入像素值，因此，尤其是，减小了图像的大小而仍然保持了极大的清晰度
imagecopyresampled($QR, $logo, $from_width, $from_width, 0, 0, $logo_qr_width, $logo_qr_height, $logo_width, $logo_height); 
} 
imagepng($QR,'log.png'); 
?>
